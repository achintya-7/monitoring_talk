multitenancy_enabled: false

server:
  http_listen_port: 3200

distributor:
  receivers: # this configuration will listen on all ports and protocols that tempo is capable of.
    jaeger: # the receives all come from the OpenTelemetry collector.  more configuration information can
      protocols: # be found there: https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver
        thrift_http: #
        grpc: # for a production deployment you should only enable the receivers you need!
        thrift_binary:
        thrift_compact:
    zipkin:
    otlp:
      protocols:
        http:
        grpc:
    opencensus:

ingester:
  trace_idle_period: '10s' # the length of time after a trace has not received spans to consider it complete and flush it
  max_block_bytes: 1_000_000 # cut the head block when it hits this size or ...
  max_block_duration: '5m' #   this much time passes

compactor:
  compaction:
    compaction_window: '1h' # blocks in this time window will be compacted together
    max_block_bytes: 100_000_000 # maximum size of compacted blocks
    block_retention: '24h'
    compacted_block_retention: '10m'

metrics_generator:
  registry:
    external_labels:
      source: 'tempo'
      cluster: '${DEMO_PACKAGE_NAME}'
  storage:
    path: '/tmp/tempo/generator/wal'
    remote_write:
      - url: '${MIMIR_URI}/api/v1/push'
        send_exemplars: true

storage:
  trace:
    backend: 'local'
    local:
      path: '/tmp/tempo/traces'  

overrides:
  metrics_generator_processors:
    - 'service-graphs'
    - 'span-metrics'
